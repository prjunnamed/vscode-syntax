{
  "scopeName": "source.prjunnamed",
  "patterns": [
    {"include": "#comment"},
    {"include": "#decimal"},
    {"include": "#ternary"},
    {"include": "#string"},
    {"include": "#io-port"},
    {"include": "#cell-ref"},
    {"include": "#cell-name"}
  ],
  "repository": {
    "comment": {
      "match": ";.+",
      "name": "comment.line.prjunnamed"
    },
    "decimal": {
      "match": "#\\d+",
      "name": "constant.numeric.decimal.prjunnamed"
    },
    "ternary": {
      "match": "[01X]+",
      "name": "constant.numeric.binary.prjunnamed"
    },
    "string-escape": {
      "match": "\\[0-9a-f]{2}",
      "name": "constant.character.escape.prjunnamed"
    },
    "string": {
      "begin": "\"",
      "end": "\"",
      "name": "string.quoted.double.prjunnamed",
      "patterns": [{ "include": "#string-escape" }]
    },
    "io-port": {
      "begin": "&\"",
      "end": "(\"):\\d+",
      "name": "entity.name.io-port.prjunnamed",
      "patterns": [{ "include": "#string-escape" }]
    },
    "cell-ref": {
      "match": "%\\d+(:\\d+)?(\\+\\d+)?",
      "name": "variable.parameter.prjunnamed"
    },
    "cell-name": {
      "match": "buf|not|and|or|xor|mux|adc|eq|ult|slt|shl|ushr|sshr|xshr|mul|udiv|umod|sdiv_trunc|sdiv_floor|smod_trunc|smod_floor|match|assign|dff|memory|iob|target|input|output|name",
      "name": "keyword.other.cell.prjunnamed"
    }
  }
}
